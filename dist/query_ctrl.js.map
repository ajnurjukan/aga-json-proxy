{"version":3,"sources":["../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","console","log","target","operators","type","segments","query","datasource","metricFindQuery","then","result","data","segment","name","panelCtrl","refresh","rawQuery","updateSegments","QueryCtrl","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AACZ,qCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,sJACzBD,MADyB,EACjBC,SADiB;;AAE/B,QAAKC,KAAL,GAAaF,MAAb;AACAG,UAAQC,GAAR,CAAY,aAAZ,EAA2B,MAAKC,MAAL,CAAYA,MAAvC;;AAEA,QAAKC,SAAL,GAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,IAAhB,CAAjB;AACA,QAAKD,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,eAA3C;AACA,QAAKA,MAAL,CAAYE,IAAZ,GAAmB,MAAKF,MAAL,CAAYE,IAAZ,IAAoB,WAAvC;AACA,QAAKF,MAAL,CAAYG,QAAZ,GAAuB,MAAKH,MAAL,CAAYG,QAAZ,IAAwB,EAA/C;AAR+B;AAS/B;;;;6BAEUC,K,EAAO;AACjB,UAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCF,SAAS,EAAzC,EAA6CG,IAA7C,CAAkD,kBAAU;AAClE,WAAOC,OAAOC,IAAd;AACA,IAFM,CAAP;AAGA;;;oCAEiBC,O,EAASN,K,EAAO;AACjC,UAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgCI,QAAQC,IAAxC,EAA8CJ,IAA9C,CAAmD,kBAAU;AAClE,WAAOC,OAAOC,IAAd;AACD,IAFM,CAAP;AAGA;;;mCAEgB;AAAA;;AAChB,OAAI,KAAKT,MAAL,CAAYA,MAAZ,IAAsB,KAAKA,MAAL,CAAYA,MAAZ,IAAsB,eAAhD,EAAiE;AAChE,SAAKK,UAAL,CAAgBC,eAAhB,CAAgC,KAAKN,MAAL,CAAYA,MAAZ,IAAsB,EAAtD,EAA0DO,IAA1D,CAA+D,kBAAU;AACxE,YAAKP,MAAL,CAAYG,QAAZ,GAAuBK,OAAOC,IAA9B;AACA,YAAKG,SAAL,CAAeC,OAAf;AACA,KAHD,EAGG;AACH;AACD;;;qCAEkB;AAClB,QAAKb,MAAL,CAAYc,QAAZ,GAAuB,CAAC,KAAKd,MAAL,CAAYc,QAApC;AACA;;;mCAEgB;AAChB,QAAKC,cAAL;AACA;;;qCAEkB;AAClBjB,WAAQC,GAAR,CAAY,kBAAZ;AACA,QAAKa,SAAL,CAAeC,OAAf,GAFkB,CAEQ;AAC1B;;;;EA5C8CG,c;;AAgDhDtB,2BAA2BuB,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport './css/query-editor.css!'\n\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\n\tconstructor($scope, $injector)  {\n\t\tsuper($scope, $injector);\n\t\tthis.scope = $scope;\n\t\tconsole.log(\"constructor\", this.target.target);\n\t\t\n\t\tthis.operators = [\"<\", \">\", \"=\", \"!=\"];\n\t\tthis.target.target = this.target.target || 'select metric';\n\t\tthis.target.type = this.target.type || 'timeserie';\n\t\tthis.target.segments = this.target.segments || [];\n\t}\n\n\tgetOptions(query) {\n\t\treturn this.datasource.metricFindQuery(query || '').then(result => {\n\t\t\treturn result.data;\n\t\t});\n\t}\n\n\tgetSegmentOptions(segment, query) {\n\t\treturn this.datasource.metricFindQuery(segment.name).then(result => {\n\t\t  return result.data;\n\t\t});\n\t}\n\n\tupdateSegments() {\n\t\tif (this.target.target && this.target.target != 'select metric') {\n\t\t\tthis.datasource.metricFindQuery(this.target.target || '').then(result => {\n\t\t\t\tthis.target.segments = result.data;\n\t\t\t\tthis.panelCtrl.refresh();\n\t\t\t});;\n\t\t}\n\t}\n\n\ttoggleEditorMode() {\n\t\tthis.target.rawQuery = !this.target.rawQuery;\n\t}\n\n\tonChangeTarget() {\n\t\tthis.updateSegments();\n\t}\n\n\tonChangeInternal() {\n\t\tconsole.log(\"onChangeInternal\");\n\t\tthis.panelCtrl.refresh(); // Asks the panel to refresh data.\n\t}\n\n}\n\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n\n"]}